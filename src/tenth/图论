1、图的存储
邻接矩阵  二维数组
   0  1  2  3  4
0  0  2  0  0  1
1  2  0  2  0  2
2  0  2  0  1  0
3  0  0  1  0  1
4  1  2  0  1  0

临接表  链表

head
adj[0]  -->   1(2) --> 4(1)   /

adj[1]  -->   0(2) --> 2(2)   -->  4(2) /

adj[2]  -->   1(2) --> 3(1)

图的遍历

dfs 深度优先搜索

bfd 广度优先搜索


foldy 算法 和 dijkstra 算法
https://www.cnblogs.com/GumpYan/p/5540549.html


foldy 核心算法
 //Floyd-Warshall算法核心语句

    for(k=1;k<=n;k++)

        for(i=1;i<=n;i++)

            for(j=1;j<=n;j++)

                if(e[i][j]>e[i][k]+e[k][j] )

                    e[i][j]=e[i][k]+e[k][j];


dijkstra 算法
