2
5
1234567890001 95
1234567890005 100
1234567890003 95
1234567890002 77
1234567890004 85
4
1234567890013 65
1234567890011 25
1234567890014 100
1234567890012 85

排序

//这里rank班内和全局 用了两种 ，1、每次循环加一，但是判断一样仍使用之前的rank，前提是之前的rank，对象有保存。不推荐吧
//2、根据循环次数，如果== 不更新，使用rank不变， 一旦不符合要求直接通过循环次数来 更新rank
//归根结底是 使用外界已知来更新，1、上一个对象（不好用）2、循环次数

  Arrays.sort(stu, sum - num, sum, new Comparator<Students>() {
                @Override
                public int compare(Students o1, Students o2) {
                    if (o1.score < o2.score)
                        return 1;
                    else if (o1.score == o2.score) {
                        if(o1.id.compareTo(o2.id)>0)  //  如果 o1.id >o2 , 返回1 表示交换
                                return 1;
                        else
                                return -1;
                    } else
                        return -1;
                }
            });
